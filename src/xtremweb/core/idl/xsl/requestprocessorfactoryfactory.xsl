<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.1">

<xsl:output method="text" />
<xsl:include href="lib.xsl"/>

<xsl:template match="/">    

<xsl:variable name="moduleName"
  select="/Module/@name" />
<xsl:message>Processing CommRMI for module <xsl:value-of select="$moduleName" /></xsl:message>

<xsl:variable name="filename"
  select="concat('src/xtremweb/core/com/xmlrpc/Callback',$moduleName,'ProcessorFactoryFactory','.java')" />
<xsl:message>Creating <xsl:value-of select="$filename" /></xsl:message>
<xsl:document href="{$filename}" method="text">


/**
 * CommRMI<xsl:value-of select="Module/@name" />.java
 *
 *  Creates the exotic ApacheRPC RequestProcessorFactoryFactory to control that only one object is created,
 *  the information about why this is needed can be found in http://ws.apache.org/xmlrpc/handlerCreation.html
 *
 * This code is generated with from TODO
 * the definition file used TODO
 *
 * Do not edit this file
 *
 * @author jsaray
 * @version "1.0"
 */

package xtremweb.core.com.xmlrpc;

import org.apache.xmlrpc.XmlRpcException;
import org.apache.xmlrpc.XmlRpcRequest;
import org.apache.xmlrpc.server.RequestProcessorFactoryFactory;

import xtremweb.core.iface.Interface<xsl:value-of select="$moduleName"/>;

public class Callback<xsl:value-of select="$moduleName"/>ProcessorFactoryFactory implements RequestProcessorFactoryFactory {

  private final RequestProcessorFactory factory = (RequestProcessorFactory) new Callback<xsl:value-of select="$moduleName"/>RequestProcessorFactory();
  
  private final Interface<xsl:value-of select="$moduleName"/><xsl:text>  </xsl:text> <xsl:value-of select="$moduleName"/>;
  
  public Callback<xsl:value-of select="$moduleName"/>ProcessorFactoryFactory(Interface<xsl:value-of select="$moduleName"/><xsl:text>  </xsl:text>
  <xsl:value-of select="$moduleName"/>){
       this.<xsl:value-of select="$moduleName"/> = <xsl:value-of select="$moduleName"/>;
  }
  
  public RequestProcessorFactory getRequestProcessorFactory(Class arg0)
			throws XmlRpcException {
		return factory;
	}
	
	private class Callback<xsl:value-of select="$moduleName"/>RequestProcessorFactory implements
			RequestProcessorFactory {
		public Object getRequestProcessor(XmlRpcRequest xmlRpcRequest)
				throws XmlRpcException {
			return <xsl:value-of select="$moduleName"/>;
		}
	}
}
</xsl:document>
</xsl:template>



</xsl:stylesheet>
